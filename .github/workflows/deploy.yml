name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RUBY_VERSION: '3.3'
  NODE_VERSION: '20'
  RAILS_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: |
          bundle install
          yarn install

      - name: Setup database
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
          REDIS_URL: redis://localhost:6379/0
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
          REDIS_URL: redis://localhost:6379/0
        run: |
          bundle exec rails test
          bundle exec rails test:system

      - name: Run security checks
        run: |
          bundle exec brakeman --no-pager
          bundle exec bundler-audit check --update

      - name: Check code quality
        run: |
          bundle exec rubocop
          bundle exec rails_best_practices

      - name: Performance benchmarks
        run: bundle exec rails test:benchmark

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t agentic-rails:${{ github.sha }} .
          docker tag agentic-rails:${{ github.sha }} agentic-rails:latest

      - name: Deploy to production
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          PRODUCTION_HOST: ${{ secrets.PRODUCTION_HOST }}
        run: |
          echo "$DEPLOY_KEY" | ssh-add -
          ssh deploy@$PRODUCTION_HOST 'cd /app && docker-compose pull && docker-compose up -d'

      - name: Run migrations
        run: |
          ssh deploy@$PRODUCTION_HOST 'cd /app && docker-compose exec web rails db:migrate'

      - name: Health check
        run: |
          sleep 30
          curl -f https://$PRODUCTION_HOST/health || exit 1

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Production deployment completed'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()